# ╔═════════════════════════════════════════════════════════════════════════════╗
# ║  NoteVibe – Project Structure                                              ║
# ║  Author: NoteVibe Team                                                     ║
# ║  Owner:  Kartikeya Pandey                                                  ║
# ║  License: Proprietary                                                      ║
# ║  Version: 1.0.1                                                            ║
# ║  Live Site: https://notevibe.onrender.com                                  ║
# ║                                                                            ║
# ║  This living document maps every folder & file so newcomers (and future    ║
# ║  you!) can immediately understand where things live and why. Feel free to  ║
# ║  extend it whenever the project grows.                                     ║
# ╚═════════════════════════════════════════════════════════════════════════════╝

NoteVibe/                          # Root project directory
│
├── 📄 Core Application Files
│   ├── app.py                     # Main Flask application (routes + email functionality)
│   │                              #   - 15+ routes for all pages
│   │                              #   - Gmail SMTP email handling
│   │                              #   - Error handlers (404, etc.)
│   │                              #   - Environment variable management
│   │                              #   - Logging configuration
│   │
│   ├── requirements.txt           # Python dependencies (Flask 3.1.1, gunicorn, python-dotenv)
│   │                              #   - Locked versions for reproducible builds
│   │                              #   - Production-ready WSGI server included
│   │
│   ├── test_contact.py            # Test script for contact form functionality
│   │                              #   - Validates imports, env vars, and routes
│   │                              #   - CLI-based smoke testing
│   │                              #   - Exit codes for CI/CD integration
│   │
│   └── structure.txt              # ← You are here – annotated project map
│
├── 📚 Documentation
│   ├── README.md                  # Project documentation & onboarding guide
│   │                              #   - Setup instructions
│   │                              #   - Feature overview
│   │                              #   - Screenshots gallery
│   │                              #   - License information
│   │
│   └── LICENSE                    # Proprietary license terms
│
├── 🔧 Configuration Files
│   ├── .gitattributes             # Git attributes configuration (line endings, etc.)
│   ├── .gitignore                 # Git ignore rules (.env files, __pycache__, etc.)
│   └── .env                       # Environment variables (NOT committed to git)
│                                  #   - EMAIL_ADDRESS: Gmail address for contact form
│                                  #   - EMAIL_PASSWORD: Gmail app password
│                                  #   - APP_SECRET_KEY: Flask session encryption
│
├── 🎨 Static Assets (/static)
│   └── images/                    # Image assets served directly by Flask
│       ├── logo.png               # Project logo used in navbar & documentation
│       ├── github-icon.png        # GitHub icon for footer/social links
│       ├── gmail-icon.png         # Gmail icon for contact links
│       │
│       ├── 📸 Screenshots (for README.md)
│       │   ├── Homepage-screenshot.png      # Landing page preview
│       │   ├── Notespage-screenshot.png     # Programming notes page
│       │   ├── Cheatsheetspage-screenshot.png # Reference materials page
│       │   ├── Interview-preppage-screenshot.png # Interview resources page
│       │   ├── Servicespage-screenshot.png  # Services overview page
│       │   ├── My-Gearpage-screenshot.png   # Equipment & tools page
│       │   ├── Updatespage-screenshot.png   # Changelog & news page
│       │   ├── Contactpage-screenshot.png   # Contact form page
│       │   └── 404-Errorpage-screenshot.png # Custom error page
│       │
│       └── 🎯 Future Assets
│           ├── favicon.ico        # Browser tab icon (planned)
│           ├── og-image.png       # Social media preview (planned)
│           └── manifest.json      # PWA manifest (planned)
│
├── 📄 HTML Templates (/templates)
│   ├── 🏠 Main Pages
│   │   ├── home.html              # Landing page (largest template - 769 lines)
│   │   │                          #   - Hero section with call-to-action
│   │   │                          #   - Feature highlights
│   │   │                          #   - Navigation to all sections
│   │   │
│   │   ├── about.html             # About page – mission, vision, team info
│   │   ├── services.html          # Overview of NoteVibe services offered
│   │   └── contact.html           # Contact form with email functionality
│   │                              #   - Form validation & flash messages
│   │                              #   - Gmail SMTP integration
│   │
│   ├── 📚 Learning Resources
│   │   ├── notes.html             # Detailed programming notes & tutorials
│   │   │                          #   - Core CS concepts
│   │   │                          #   - Python-specific content
│   │   │                          #   - Clean typography & dark theme
│   │   │
│   │   ├── cheatsheets.html       # Programming cheat-sheets & quick references
│   │   │                          #   - Printable PDFs
│   │   │                          #   - Syntax reminders
│   │   │                          #   - Command palettes
│   │   │
│   │   └── interview-prep.html    # Interview preparation resources
│   │                              #   - DSA patterns & complexity analysis
│   │                              #   - Popular interview questions
│   │                              #   - Step-by-step solutions
│   │
│   ├── 🛠️ Utility Pages
│   │   ├── my-gear.html           # Hardware/software equipment showcase
│   │   ├── updates.html           # Changelog & site announcements
│   │   └── coming-soon.html       # Teaser page for upcoming features
│   │
│   ├── ⚖️ Legal Pages
│   │   ├── terms.html             # Terms of service
│   │   └── privacy.html           # Privacy policy
│   │
│   ├── 🚨 Error Pages
│   │   └── 404.html               # Custom 404 error page
│   │                              #   - User-friendly error handling
│   │                              #   - Navigation back to main site
│   │
│   └── 📁 files/                  # (Empty) – placeholder for downloadable resources
│                                  #   - Future PDFs, code samples, etc.
│
└── 🚀 Deployment & Production
    ├── gunicorn.conf.py           # (Planned) Gunicorn configuration
    ├── Dockerfile                 # (Planned) Container configuration
    └── docker-compose.yml         # (Planned) Multi-service orchestration

#───────────────────────────────────────────────────────────────────────────────
#  Directory Purposes & Architecture
#───────────────────────────────────────────────────────────────────────────────
# • /static         – Assets served directly by Flask (no processing)
#                     Images, CSS, JS, fonts, and other static files
#                     Optimized for fast delivery and caching
#
# • /templates      – Jinja2 templates rendered by Flask routes
#                     Each template corresponds to a route in app.py
#                     Shared layouts and components for consistency
#
# • /templates/files– Future location for downloadable content
#                     PDFs, code samples, documentation files
#                     Will be served as static files with Flask routing
#
# Key Application Components:
#   app.py          Main Flask application with 15+ routes
#                   Email functionality via Gmail SMTP
#                   Error handling and logging
#                   Environment variable management
#
#   requirements.txtDependency manifest with locked versions
#                   Flask 3.1.1, gunicorn, python-dotenv
#                   Production-ready configuration
#
#   test_contact.py Comprehensive testing for contact form
#                   Validates imports, environment, and routes
#                   CLI-based with proper exit codes
#
#   README.md       Complete project documentation
#                   Setup instructions and feature overview
#                   Screenshots and licensing information
#
#───────────────────────────────────────────────────────────────────────────────
#  Development Workflow
#───────────────────────────────────────────────────────────────────────────────
# 1. Environment Setup:
#    • Create virtual environment: python -m venv .venv
#    • Activate: source .venv/Scripts/activate (PowerShell)
#    • Install dependencies: pip install -r requirements.txt
#    • Create .env file with email credentials
#
# 2. Development Server:
#    • Run: python app.py
#    • Access: http://localhost:5000
#    • Debug mode enabled for development
#
# 3. Testing:
#    • Run tests: python test_contact.py
#    • Verify all components work before deployment
#
# 4. Production Deployment:
#    • Use gunicorn for production server
#    • Set environment variables on hosting platform
#    • Configure domain and SSL certificates
#
#───────────────────────────────────────────────────────────────────────────────
#  File Naming Conventions
#───────────────────────────────────────────────────────────────────────────────
# • Templates: kebab-case.html (e.g., interview-prep.html)
# • Routes: snake_case in app.py (e.g., interview_prep)
# • Images: descriptive-names with page context
# • Screenshots: PageName-screenshot.png format
# • Python files: snake_case.py
# • Configuration: dot-prefixed (.env, .gitignore)
#
# Template Structure:
# • Each template has consistent header/footer
# • Navigation links use Flask's url_for()
# • Flash messages for user feedback
# • Responsive design with CSS Grid/Flexbox
# • Dark neon theme with glassmorphism effects
#
#───────────────────────────────────────────────────────────────────────────────
#  Security & Best Practices
#───────────────────────────────────────────────────────────────────────────────
# • Environment variables for sensitive data (.env file)
# • Gmail app passwords (not regular passwords)
# • Input validation on contact form
# • CSRF protection via Flask-WTF (planned)
# • Rate limiting for contact form (planned)
# • HTTPS enforcement in production
# • Secure headers configuration (planned)
#
# Email Configuration:
# • Uses Gmail SMTP with TLS encryption
# • App passwords for authentication
# • Error handling for failed sends
# • Logging for debugging and monitoring
#
#───────────────────────────────────────────────────────────────────────────────
#  Performance & Optimization
#───────────────────────────────────────────────────────────────────────────────
# • Static file serving via Flask
# • Image optimization (planned)
# • CSS/JS minification (planned)
# • Browser caching headers (planned)
# • CDN integration for global delivery (planned)
# • Database caching for dynamic content (planned)
#
# Current Optimizations:
# • Lightweight Flask application
# • Minimal external dependencies
# • Efficient template rendering
# • Optimized image assets
#
#───────────────────────────────────────────────────────────────────────────────
#  Future Enhancements
#───────────────────────────────────────────────────────────────────────────────
# Planned Features:
# • User authentication system
# • Database integration (SQLite/PostgreSQL)
# • Admin panel for content management
# • Blog/comment system
# • Search functionality
# • API endpoints for mobile apps
# • Real-time notifications
# • Analytics and user tracking
#
# Technical Improvements:
# • CSS/JS bundling and minification
# • Image lazy loading
# • Service worker for PWA features
# • Database migrations
# • Automated testing suite
# • CI/CD pipeline
# • Docker containerization
# • Load balancing for high traffic
#
#───────────────────────────────────────────────────────────────────────────────
#  How To Extend This Document
#───────────────────────────────────────────────────────────────────────────────
# 1) Add new files/folders:
#    • Copy the path and add descriptive comment
#    • Group logically (core files, templates, static, etc.)
#    • Use emojis for visual organization
#    • Include purpose and key features
#
# 2) Update existing entries:
#    • Add new features or capabilities
#    • Update version numbers
#    • Document breaking changes
#    • Include migration notes
#
# 3) Maintain consistency:
#    • Follow established formatting
#    • Use clear, concise descriptions
#    • Include technical details when relevant
#    • Update the "Last updated" timestamp
#
# 4) Version control:
#    • Commit structure.txt with code changes
#    • Keep documentation in sync with implementation
#    • Review and update regularly
#
#───────────────────────────────────────────────────────────────────────────────
#  Contact & Support
#───────────────────────────────────────────────────────────────────────────────
# • Email: pandeykartikeya313@gmail.com
# • Live Site: https://notevibe.onrender.com
# • License: Proprietary (see LICENSE file)
# • Commercial Use: Requires paid license
#
# Last updated: 2025-01-27
# Version: 1.0.1
# Maintained by: NoteVibe Team 